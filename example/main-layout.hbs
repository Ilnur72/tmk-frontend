<html xmlns='http://www.w3.org/1999/xhtml' class='opacity-0' lang='en'>
<!-- BEGIN: Head -->

<head>
  <meta charset='utf-8' />
  <meta name='csrf-token' content='ceKdwoQjZ4VuoGqoSQaSREwB7MD9sjwFnfhlp7MH' />
  <meta name='viewport' content='width=device-width, initial-scale=1' />
  <meta name='description'
    content='Midone admin is super flexible, powerful, clean & modern responsive tailwind admin template with unlimited possibilities.' />
  <meta name='keywords'
    content='admin template, midone Admin Template, setting template, flat admin template, responsive admin template, web app' />
  <meta name='author' content='LEFT4CODE' />
  <title>
    Онлайн ҳарита лойиҳалари
  </title>
  <!-- BEGIN: CSS Assets-->
  <link rel='stylesheet' href='../../../public/css/vendors/tippy.css' />
  <link rel='stylesheet' href='../../../public/css/vendors/litepicker.css' />
  <link rel='stylesheet' href='../../../public/css/vendors/tiny-slider.css' />
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>

  <link rel='stylesheet' href='../../../public/css//themes/rubick/side-nav.css' />
  <link rel='stylesheet' href='../../../public/css/vendors/leaflet.css' />
  <link rel='stylesheet' href='../../../public/css/vendors/simplebar.css' />
  <link rel='stylesheet' href='../../../public/css/components/ptz-controls.css' />
  <script>
    // JWT token parsing function
    function parseJwt(token) {
      if (!token) return null;

      try {
        const base64Url = token.split('.')[1];
        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
        const jsonPayload = decodeURIComponent(
          window.atob(base64)
            .split('')
            .map(c => '%' + c.charCodeAt(0).toString(16).padStart(2, '0'))
            .join('')
        );
        return JSON.parse(jsonPayload);
      } catch (e) {
        console.error('Token parse error:', e);
        return null;
      }
    }

    // Setup user permissions based on role
    function setupUserPermissions() {
      try {
        const token = localStorage.getItem('token');
        
        if (!token) {
          return;
        }
        
        const decodedToken = parseJwt(token);
        
        if (!decodedToken || !decodedToken.user) {
          return;
        }
        
        
        // Viewer role uchun menu elementlarini yashirish
        if (decodedToken.user.role === 'viewer') {
          
          // Desktop menu setting item
          const settingMenuItem = document.getElementById('setting-menu-item');
          if (settingMenuItem) {
            settingMenuItem.style.display = 'none';
          }
          
          // Mobile menu setting item
          const settingMenuItemMobile = document.getElementById('setting-menu-item-mobile');
          if (settingMenuItemMobile) {
            settingMenuItemMobile.style.display = 'none';
          }
          
        }
      } catch (error) {
        console.error('Permission setup error:', error);
      }
    }

    // DOM yuklangandan keyin permission setup
    document.addEventListener('DOMContentLoaded', function() {
      setupUserPermissions();
    });

    const token = localStorage.getItem('token');
    if (!token) {
      window.location.href = '/login';
    }
  </script>
  <link rel='stylesheet' href='../../../public/css/components/mobile-menu.css' />
  <link rel='stylesheet' href='../../../public/css/app.css' />
  <!-- END: CSS Assets-->
  <link href='https://unpkg.com/maplibre-gl@5.3.1/dist/maplibre-gl.css' rel='stylesheet' />

  <style>
    #map {
      width: 100%;
      height: 95vh;
      margin: 0;
      padding: 0;
      left: 0;
    }

    #marker {
      background-image:
        url('https://maplibre.org/maplibre-gl-js/docs/assets/washington-monument.jpg');
      background-size: cover;
      width: 50px;
      height: 50px;
      border-radius: 50%;
      cursor: pointer;
    }

    .rounded-rect {
      background: white;
      border-radius: 10px;
      box-shadow: 0 0 50px -25px black;
    }

    .flex-center {
      position: absolute;
      display: flex;
      padding-left: 10px;
      margin-top: 10px;
    }

    .flex-center.left {
      left: 0px;
    }

    .flex-center.right {
      right: 0px;
    }

    .sidebar-content {
      position:
        absolute;
      width: 88%;
      height: 90%;
      color: gray;
    }

    .sidebar-toggle {
      position: absolute;
      width: 1.3em;
      height: 1.3em;
      overflow: visible;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .sidebar-toggle.left {
      right: -1.5em;
    }

    .sidebar-toggle.right {
      left:
        -1.5em;
    }

    .sidebar-toggle:hover {
      color: #0aa1cf;
      cursor: pointer;
    }

    .sidebar {
      transition: transform 1s;
      z-index: 1;
      width: 300px;
      height:
        100%;
    }

    .left.collapsed {
      transform: translateX(-276px);
    }

    .right.collapsed {
      transform: translateX(295px);
    }

    .maplibregl-ctrl-top-right {
      bottom: 130px;
      top: auto;
      right: 7px;
    }

    .maplibregl-ctrl-bottom-right {
      bottom: 80px;
      right: 7px;
    }

    .maplibregl-canvas {
      width: 100vh;
      height: 100vh;
    }
  </style>
</head>
<!-- END: Head -->

<body>
  <div>
    <div data-tw-backdrop='' aria-hidden='true' tabindex='-1' id='theme-switcher'
      class='modal group bg-black/60 transition-[visibility,opacity] w-screen h-screen fixed left-0 top-0 [&:not(.show)]:duration-[0s,0.2s] [&:not(.show)]:delay-[0.2s,0s] [&:not(.show)]:invisible [&:not(.show)]:opacity-0 [&.show]:visible [&.show]:opacity-100 [&.show]:duration-[0s,0.4s]'>
      <div data-tw-merge=''
        class='w-[90%] ml-auto h-screen flex flex-col bg-white relative shadow-md transition-[margin-right] duration-[0.6s] -mr-[100%] group-[.show]:mr-0 dark:bg-darkmode-600 sm:w-[460px]'>
        <a class='absolute inset-y-0 left-0 right-auto my-auto -ml-[60px] flex h-8 w-8 items-center justify-center rounded-full border border-white/90 bg-white/5 text-white/90 transition-all hover:rotate-180 hover:scale-105 hover:bg-white/10 focus:outline-none sm:-ml-[105px] sm:h-14 sm:w-14'
          data-tw-dismiss='modal' href='javascript:;'>
          <i data-tw-merge='' data-lucide='x' class='h-3 w-3 stroke-[1] sm:h-8 sm:w-8'></i>
        </a>
        <div data-tw-merge='' class='overflow-y-auto flex-1 p-0'>
          <div class='flex flex-col'>
            <div class='border-b border-dashed'></div>
            <div class='px-8 pb-8 pt-6'>
              <div class='text-base font-medium'>
                Accent Colors
              </div>
              <div class='mt-0.5 text-slate-500'>
                Choose your accent color
              </div>
              <div class='mt-5 grid grid-cols-2 gap-3.5'>
                <div>
                  <a data-theme-color='default'
                    class='h-14 cursor-pointer bg-slate-50 box p-1 border-slate-300/80 block [&.active]:border-2 [&.active]:border-theme-1/60'>
                    <div class='h-full overflow-hidden rounded-md'>
                      <div class='-mx-2 flex h-full items-center gap-1'>
                        <div class='w-1/2 h-[200%] bg-theme-1 rotate-12 default'></div>
                        <div class='w-1/2 h-[200%] bg-theme-2 rotate-12 default'></div>
                      </div>
                    </div>
                  </a>
                </div>
                <div>
                  <a data-theme-color='theme-1'
                    class='h-14 cursor-pointer bg-slate-50 box p-1 border-slate-300/80 block [&.active]:border-2 [&.active]:border-theme-1/60'>
                    <div class='h-full overflow-hidden rounded-md'>
                      <div class='-mx-2 flex h-full items-center gap-1'>
                        <div class='w-1/2 h-[200%] bg-theme-1 rotate-12 theme-1'></div>
                        <div class='w-1/2 h-[200%] bg-theme-2 rotate-12 theme-1'></div>
                      </div>
                    </div>
                  </a>
                </div>
                <div>
                  <a data-theme-color='theme-2'
                    class='h-14 cursor-pointer bg-slate-50 box p-1 border-slate-300/80 block [&.active]:border-2 [&.active]:border-theme-1/60'>
                    <div class='h-full overflow-hidden rounded-md'>
                      <div class='-mx-2 flex h-full items-center gap-1'>
                        <div class='w-1/2 h-[200%] bg-theme-1 rotate-12 theme-2'></div>
                        <div class='w-1/2 h-[200%] bg-theme-2 rotate-12 theme-2'></div>
                      </div>
                    </div>
                  </a>
                </div>
                <div>
                  <a data-theme-color='theme-3'
                    class='h-14 cursor-pointer bg-slate-50 box p-1 border-slate-300/80 block [&.active]:border-2 [&.active]:border-theme-1/60'>
                    <div class='h-full overflow-hidden rounded-md'>
                      <div class='-mx-2 flex h-full items-center gap-1'>
                        <div class='w-1/2 h-[200%] bg-theme-1 rotate-12 theme-3'></div>
                        <div class='w-1/2 h-[200%] bg-theme-2 rotate-12 theme-3'></div>
                      </div>
                    </div>
                  </a>
                </div>
                <div>
                  <a data-theme-color='theme-4'
                    class='h-14 cursor-pointer bg-slate-50 box p-1 border-slate-300/80 block [&.active]:border-2 [&.active]:border-theme-1/60'>
                    <div class='h-full overflow-hidden rounded-md'>
                      <div class='-mx-2 flex h-full items-center gap-1'>
                        <div class='w-1/2 h-[200%] bg-theme-1 rotate-12 theme-4'></div>
                        <div class='w-1/2 h-[200%] bg-theme-2 rotate-12 theme-4'></div>
                      </div>
                    </div>
                  </a>
                </div>
              </div>
            </div>
            <div class='border-b border-dashed'></div>
            <div class='px-8 pb-8 pt-6'>
              <div class='text-base font-medium'>
                Appearance
              </div>
              <div class='mt-0.5 text-slate-500'>
                Choose your appearance
              </div>
              <div class='mt-5 grid grid-cols-2 gap-3.5'>
                <div>
                  <a data-appearance-mode='light'
                    class='h-12 cursor-pointer bg-slate-50 box p-1 border-slate-300/80 block [&.active]:border-2 [&.active]:border-theme-1/60'>
                    <div class='h-full overflow-hidden rounded-md bg-slate-200'></div>
                  </a>
                  <div class='mt-2.5 text-center text-xs capitalize'>
                    Light
                  </div>
                </div>
                <div>
                  <a data-appearance-mode='dark'
                    class='h-12 cursor-pointer bg-slate-50 box p-1 border-slate-300/80 block [&.active]:border-2 [&.active]:border-theme-1/60'>
                    <div class='h-full overflow-hidden rounded-md bg-slate-900'></div>
                  </a>
                  <div class='mt-2.5 text-center text-xs capitalize'>
                    Dark
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    {{!-- <div
      class='fixed bottom-0 right-0 z-50 mb-5 mr-5 flex h-14 w-14 cursor-pointer items-center justify-center rounded-full bg-theme-1 text-white shadow-lg'
      data-tw-toggle='modal' data-tw-target='#theme-switcher'>
      <i data-tw-merge='' data-lucide='settings' class='stroke-1.5 w-5 h-5 animate-spin'></i>
    </div> --}}
  </div>
  <div
    class="rubick px-2 sm:px-2  before:content-[''] before:bg-gradient-to-b before:from-theme-1 before:to-theme-2 dark:before:from-darkmode-800 dark:before:to-darkmode-800 before:fixed before:inset-0 before:z-[-1]">
    <!-- BEGIN: Mobile Menu -->
    <div
      class="mobile-menu group top-0 inset-x-0 fixed bg-theme-1/90 z-[60] border-b border-white/[0.08] dark:bg-darkmode-800/90 md:hidden before:content-[''] before:w-full before:h-screen before:z-10 before:fixed before:inset-x-0 before:bg-black/90 before:transition-opacity before:duration-200 before:ease-in-out before:invisible before:opacity-0 [&.mobile-menu--active]:before:visible [&.mobile-menu--active]:before:opacity-100">
      <div class='flex h-[45px] items-center px-3 sm:px-8'>
        <a class='mr-auto flex' href=''>
          <img class='w-16' src='../../../public/image/logo-full-w.png' alt='TMK' />
        </a>
        <a class='mobile-menu-toggler' href='#'>
          <i data-tw-merge='' data-lucide='bar-chart2' class='stroke-1.5 h-8 w-8 -rotate-90 transform text-white'></i>
        </a>
      </div>
      <div
        class='scrollable h-screen z-20 top-0 left-0 w-[270px] -ml-[100%] bg-primary transition-all duration-300 ease-in-out dark:bg-darkmode-800 [&[data-simplebar]]:fixed [&_.simplebar-scrollbar]:before:bg-black/50 group-[.mobile-menu--active]:ml-0'>
        <a href='#'
          class='fixed top-0 right-0 mt-4 mr-4 transition-opacity duration-200 ease-in-out invisible opacity-0 group-[.mobile-menu--active]:visible group-[.mobile-menu--active]:opacity-100'>
          <i data-tw-merge='' data-lucide='x-circle'
            class='stroke-1.5 mobile-menu-toggler h-8 w-8 -rotate-90 transform text-white'></i>
        </a>
        <ul class='py-2'>
          <!-- BEGIN: First Child -->
          <li>
            <a class='menu menu--active' href='/'>
              <div class='menu__icon'>
                <i data-tw-merge='' data-lucide='home' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='menu__title'>
                Лойиҳалар ҳаритаси
              </div>
            </a>
          </li>

          <li>
            <a class='menu' href='/factory/'>
              <div class='menu__icon'>
                <i data-tw-merge='' data-lucide='Briefcase' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='menu__title'>
                Инвестиция лойиҳалари
              </div>
            </a>
          </li>
          <li>
            <a class='menu' href='/production/'>
              <div class='menu__icon'>
                <i data-tw-merge='' data-lucide='Git-Pull-Request' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='menu__title'>
                Ишлаб чиқариш
              </div>
            </a>
          </li>
          <li>
            <a class='menu' href='/sales/'>
              <div class='menu__icon'>
                <i data-tw-merge='' data-lucide='Bar-Chart' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='menu__title'>
                Сотув кўрсаткичлари
              </div>
            </a>
          </li>
          <li>
            <a class='menu' href='/finance/'>
              <div class='menu__icon'>
                <i data-tw-merge='' data-lucide='Bar-Chart2' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='menu__title'>
                Молиявий кўрсаткичлар
              </div>
            </a>
          </li>
          <li>
            <a class='menu' href='/employers/'>
              <div class='menu__icon'>
                <i data-tw-merge='' data-lucide='Users' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='menu__title'>
                Ходимлар
              </div>
            </a>
          </li>
          <li>
            <a class='menu' href='/techniques/'>
              <div class='menu__icon'>
                <i data-tw-merge='' data-lucide='Codepen' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='menu__title'>
                Техникалар
              </div>
            </a>
          </li>
          <li id="setting-menu-item-mobile">
            <a class='menu' href='/setting'>
              <div class='menu__icon'>
                <i data-tw-merge='' data-lucide='settings' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='menu__title'>
                Параметр
              </div>
            </a>
          </li>
          <li>
            <a class='menu' href='/cameras'>
              <div class='menu__icon'>
                <i data-tw-merge='' data-lucide='Camera' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='menu__title'>
                Камералар
              </div>
            </a>
          </li>
          <li>
            <a class='menu' href='/login'>
              <div class='menu__icon'>
                <i data-tw-merge='' data-lucide='log-out' class='stroke-1.5 w-5 h-5 rotate-180'></i>
              </div>
              <div class='menu__title'>
                Тизимдан чиқиш
              </div>
            </a>
          </li>
          <!-- END: First Child -->
        </ul>
      </div>
    </div>
    <!-- END: Mobile Menu -->
    <div class='mt-[3.3rem] flex md:mt-0'>
      <!-- BEGIN: Side Menu -->
      <nav class='side-nav hidden w-[80px] overflow-x-hidden pb-16 pr-5 md:block xl:w-[230px]'>
        <a class='flex items-center pt-4 pl-5 intro-x' href=''>
          <img class='w-42' src='../../../public/image/logo-full-w.png' alt='TMK' />
        </a>
        <div class='my-6 side-nav__divider'></div>
        <ul>
          <li>
            <a href='/' class='side-menu side-menu--active'>
              <div class='side-menu__icon'>
                <i data-tw-merge='' data-lucide='home' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='side-menu__title'>
                Лойиҳалар ҳаритаси
              </div>
            </a>
          </li>

          <li>
            <a href='/factory/' class='side-menu'>
              <div class='side-menu__icon'>
                <i data-tw-merge='' data-lucide='Briefcase' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='side-menu__title'>
                Инвестиция лойиҳалари
              </div>
            </a>
          </li>
          <li>
            <a href='/production/' class='side-menu'>
              <div class='side-menu__icon'>
                <i data-tw-merge='' data-lucide='Git-Pull-Request' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='side-menu__title'>
                Ишлаб чиқариш
              </div>
            </a>
          </li>
          <li>
            <a href='/sales/' class='side-menu'>
              <div class='side-menu__icon'>
                <i data-tw-merge='' data-lucide='Bar-Chart' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='side-menu__title'>
                Сотув кўрсаткичлари
              </div>
            </a>
          </li>
          <li>
            <a href='/finance/' class='side-menu'>
              <div class='side-menu__icon'>
                <i data-tw-merge='' data-lucide='Bar-Chart2' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='side-menu__title'>
                Молиявий кўрсаткичлар
              </div>
            </a>
          </li>
          <li>
            <a href='/employers/' class='side-menu'>
              <div class='side-menu__icon'>
                <i data-tw-merge='' data-lucide='Users' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='side-menu__title'>
                Ходимлар
              </div>
            </a>
          </li>
          <li>
            <a href='/techniques/' class='side-menu'>
              <div class='side-menu__icon'>
                <i data-tw-merge='' data-lucide='Codepen' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='side-menu__title'>
                Техникалар
              </div>
            </a>
          </li>
          <li id="setting-menu-item">
            <a class='side-menu' href='/setting'>
              <div class='side-menu__icon'>
                <i data-tw-merge='' data-lucide='settings' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='side-menu__title'>
                Параметр
              </div>
            </a>
          </li>
          <li>
            <a href='/cameras' class='side-menu'>
              <div class='side-menu__icon'>
                <i data-tw-merge='' data-lucide='Camera' class='stroke-1.5 w-5 h-5'></i>
              </div>
              <div class='side-menu__title'>
                Камералар
              </div>
            </a>
          </li>
          <li>
            <a href='/login' class='side-menu'>
              <div class='side-menu__icon'>
                <i data-tw-merge='' data-lucide='log-out' class='stroke-1.5 w-5 h-5 rotate-180'></i>
              </div>
              <div class='side-menu__title'>
                Тизимдан чиқиш
              </div>
            </a>
          </li>
        </ul>
      </nav>

      <!-- END: Side Menu -->
      <!-- BEGIN: Content -->
      {{{body}}}
      <!-- END: Content -->
    </div>
  </div>
  <!-- BEGIN: Vendor JS Assets-->
  <script src='../../../public/js/vendors/dom.js'></script>
  <script src='../../../public/js/vendors/tailwind-merge.js'></script>
  <script src='../../../public/js/vendors/lucide.js'></script>
  <script src='../../../public/js/vendors/tippy.js'></script>
  <script src='../../../public/js/vendors/dayjs.js'></script>
  <script src='../../../public/js/vendors/litepicker.js'></script>
  <script src='../../../public/js/vendors/popper.js'></script>
  <script src='../../../public/js/vendors/dropdown.js'></script>
  <script src='../../../public/js/vendors/tiny-slider.js'></script>
  <script src='../../../public/js/vendors/transition.js'></script>
  <script src='../../../public/js/vendors/chartjs.js'></script>
  <script src='../../../public/js/vendors/leaflet-map.js'></script>
  <script src='../../../public/js/vendors/axios.js'></script>
  <script src='../../../public/js/utils/colors.js'></script>
  <script src='../../../public/js/utils/helper.js'></script>
  <script src='../../../public/js/vendors/simplebar.js'></script>
  <script src='../../../public/js/vendors/modal.js'></script>
  <script src='../../../public/js/components/base/theme-color.js'></script>
  <script src='../../../public/js/components/base/lucide.js'></script>
  <script src='../../../public/js/components/base/tippy.js'></script>
  <script src='../../../public/js/components/base/litepicker.js'></script>
  <script src='../../../public/js/components/report-line-chart.js'></script>
  <script src='../../../public/js/components/report-pie-chart.js'></script>
  <script src='../../../public/js/components/report-donut-chart.js'></script>
  <script src='../../../public/js/components/report-donut-chart-1.js'></script>
  <script src='../../../public/js/components/simple-line-chart-1.js'></script>
  <script src='../../../public/js/components/line-chart.js'></script>
  <script src='../../../public/js/components/base/tiny-slider.js'></script>
  <script src='../../../public/js/themes/rubick.js'></script>
  {{!
  <script src="../../../public/js/components/base/leaflet-map-loader.js"></script> }}
  <script src='../../../public/js/components/mobile-menu.js'></script>
  <script src='../../../public/js/components/themes/rubick/top-bar.js'></script>
  <!-- END: Vendor JS Assets-->
  <!-- BEGIN: Pages, layouts, components JS Assets-->
  <!-- END: Pages, layouts, components JS Assets-->
  <script src='https://unpkg.com/maplibre-gl@5.3.1/dist/maplibre-gl.js'></script>
  <script>
    const vectorStyle = 'https://api.maptiler.com/maps/019644f4-f546-7d75-81ed-49e8e52c20c7/style.json?key=Ql4Zhf4TMUJJKxx8Xht6';
      const satelliteStyle = {
        version: 8,
        sources: {
          esri: {
            type: 'raster',
            tiles: [
              'https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'
            ],
            tileSize: 256,
          }
        },
        layers: [
          {
            id: 'esri-satellite',
            type: 'raster',
            source: 'esri',
            minzoom: 0,
            maxzoom: 22
          }
        ]
      };

    const mapContainer = document.getElementById('map');
    if (mapContainer) {

      const map = new maplibregl.Map({
        container: 'map',
        style: vectorStyle,
        center: [69.2401, 41.2995], // Tashkent
        zoom: 6,
        attributionControl: false
      });

      map.addControl(new maplibregl.NavigationControl());

      class LayerToggleControl {
        onAdd(map) {
          this._map = map;
          this._isSatellite = false;

          this._btn = document.createElement('button');
          this._btn.className = 'maplibregl-ctrl-icon';
          this._btn.type = 'button';
          this._btn.title = 'Toggle Satellite';
          this._btn.innerHTML = '🛰️';

          this._btn.onclick = () => {
            map.setStyle(this._isSatellite ? vectorStyle : satelliteStyle);
            this._isSatellite = !this._isSatellite;
          };

          const container = document.createElement('div');
          container.className = 'maplibregl-ctrl maplibregl-ctrl-group bottom-20';
          container.appendChild(this._btn);
          return container;
        }

        onRemove() {
          this._btn.remove();
          this._map = undefined;
        }
      }

      map.addControl(new LayerToggleControl(), 'bottom-right');



      let markers = [];
      function toggleSidebar(id) {
        const elem = document.getElementById(id);
        const classes = elem.className.split(' ');
        const collapsed = classes.indexOf('collapsed') !== -1;

        const padding = {};

        if (collapsed) {
          // Remove the 'collapsed' class from the class list of the element, this sets it back to the expanded state.
          classes.splice(classes.indexOf('collapsed'), 1);

          padding[id] = 300; // In px, matches the width of the sidebars set in .sidebar CSS class
          map.easeTo({
            padding,
            duration: 1000 // In ms, CSS transition duration property for the sidebar matches this value
          });
        } else {
          padding[id] = 0;
          // Add the 'collapsed' class to the class list of the element
          classes.push('collapsed');

          map.easeTo({
            padding,
            duration: 1000
          });
        }

        // Update the class list on the element
        elem.className = classes.join(' ');
      }

      // Add markers to map and populate sidebar
      map.on('load', () => {
        toggleSidebar('left');
        const markerList = document.getElementById('markerList');
        let locations = [];
        let pathname = '/factory/marker';
        if (window.location.pathname === '/') pathname = '/factory/marker';
        if (window.location.pathname === '/techniques/') pathname = '/techniques/marker';
        fetch(pathname)
          .then(response => response.json())
          .then(data => {
            data.forEach(item => {
              if (item.coords && typeof item.coords === 'string') {
                item.coords = JSON.parse(item.coords.replace(/'/g, '"')); // stringni massivga aylantirish
              }
            });
            locations = data;
            initializeMarkers(); // Call a function to initialize markers after data is loaded
          })
          .catch(error => console.error('Error fetching locations:', error));
        function initializeMarkers() {
          const markerList = document.getElementById('markerList');
          let list_data = '';
          locations.forEach((loc, index) => {
            // Factory map sahifasida popup o'rniga modal ishlatamiz
            const isFactoryMap = window.location.pathname === '/factory/map';
            let popup = null;
            
            // Faqat factory map bo'lmagan sahifalarda popup yaratamiz  
            if (!isFactoryMap) {
              const popupContent = `
    <div style="background: white; padding: 10px; border-radius: 5px;" class="w-96 max-md:w-[300px]">
      <h2 style="margin: 0; color: #2c3e50;" class="font-bold text-lg">${loc.name}</h2>
      <p style="margin: 5px 0; font-size: 1.4em;">Лойиҳа ва объект бўйича маълумот</p>
      <p style="margin: 5px 0; font-size: 1.4em;">Қурилиш жараёни маълумотлари</p>
      <p style="margin: 5px 0; font-size: 1.4em;">Ишлаб чиқариш жараёни маълумотлари</p>
      <p style="margin: 5px 0; font-size: 1.4em;">Онлайн видео кузатув</p>
      <p style="margin: 5px 0; font-size: 1.4em;">Ходимлар ҳақида махлумот</p>
      <p style="margin: 5px 0; font-size: 1.4em;">Техникалар ҳақида махлумот</p>
      <img src="${loc.images ? `../../../mnt/tmkupload/factory-images/${JSON.parse(loc.images)[0]}` : '../../../public/image/1.jpg'}" style="width: 100%; border-radius: 5px;" />
    </div>
  `;
              popup = new maplibregl.Popup({ offset: 25 }).setHTML(popupContent);
            }
            const el = document.createElement('img');
            let imageName = `${loc.marker_icon}.png` || 'marker.png';
            {{!-- imageName = 'factory2.png'; --}}
            if (window.location.pathname === '/techniques/') imageName = 'carmarker.png';
            {{!-- el.src = `../../../public/image/${loc.marker_icon}.png` --}}
            el.src = `../../../public/image/${imageName}`; // custom icon URL
            el.style.width = '64px';
            el.style.height = '64px';
            el.style.cursor = 'pointer';
            // Create the marker and add to map
            const marker = new maplibregl.Marker({ element: el })
              .setLngLat(loc.coords);
            
            // Faqat boshqa sahifalarda popup qo'shamiz
            if (popup) {
              marker.setPopup(popup);
            }
            
            marker.addTo(map);
            const href = window.location.pathname


            markers.push({ name: `${(href === '/') ? loc.name : loc.carnum + ' ' + loc.model + ' ' + loc.type}`, coords: loc.coords, marker });

            // Add the marker name to sidebar list
            const listItem = document.createElement('span');
            listItem.textContent = loc.name;
            listItem.onclick = () => {
              // Fly to the marker on sidebar click
              flyToMarker(loc.coords);
            };

            //list_data += '<span onclick="flyToMarker(['+loc.coords+'])">'+ loc.sort_num + '. ' +  loc.name + '</span><br>';
            // Добавляем к переменной
            const clickAction = window.location.pathname === '/factory/map' || window.location.pathname === '/' ? 
              `flyToMarker([${loc.coords}], true); setTimeout(() => { if(typeof window.showFactoryDetails === 'function') window.showFactoryDetails(${JSON.stringify(loc).replace(/"/g, '&quot;')}); }, 500);` :
              `flyToMarker([${loc.coords}], true)`;
              
            list_data += '<div class="intro-x">\n' +
              '                                            <div class="box zoom-in mb-1 flex items-center px-1 py-1" onclick="' + clickAction + '">\n' +
              '                                                <div class="image-fit h-10 w-10 flex-none overflow-hidden rounded-full">\n' +
              '                                                    <img src="../../../public/image/marker2.png">\n' +
              '                                                </div>\n' +
              '                                                <div class="ml-4 mr-auto">\n' +
              '                                                    <div class="font-small">' + (index+1) + '. ' + ((href === '/') ? loc.name : loc.carnum + ' ' + loc.model + ' ' + loc.type) + '</div>\n' +
              '                                                </div>\n' +
              '                                            </div>\n' +
              '                                        </div>';
            markerList.innerHTML = list_data;

            //markerList.appendChild(listItem);

            // When marker is clicked, fly to the marker
            marker.getElement().addEventListener('click', (e) => {
              e.stopPropagation();
              flyToMarker(loc.coords);
              
              // Asosiy sahifa yoki factory map sahifasida modal ham ochish
              if (window.location.pathname === '/' || window.location.pathname === '/factory/map') {
                if (typeof window.showFactoryDetails === 'function') {
                  // Modal ochishni biroz kechiktiramiz, yaqinlashish animatsiyasi boshlansin
                  setTimeout(() => {
                    window.showFactoryDetails(loc);
                  }, 500); // 500ms kechikish
                } else {
                  console.error("showFactoryDetails function not found!");
                }
              }
            });
          });
        }
      });

      // Function to fly to a marker with zoom 19
      function flyToMarker(coords, sidebarId = false) {
        if (window.innerWidth <= 768 && sidebarId) { // 768px - odatdagi tablet breakpoint
          toggleSidebar('left');
        }

        map.flyTo({
          center: coords,
          zoom: 15,
          speed: 0.8,
          curve: 1.2,
          essential: true
        });
      }
    }
  </script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const currentPath =
        window.location.pathname; const menuItems =
          document.querySelectorAll('.side-menu'); menuItems.forEach(menuItem =>
            menuItem.classList.remove('side-menu--active')); let activeItem = null;
      let maxLength = 0; menuItems.forEach((menuItem) => {
        const href =
          menuItem.getAttribute('href'); if (currentPath.startsWith(href) &&
            href.length > maxLength) {
              maxLength = href.length; activeItem =
                menuItem;
        }
      }); if (activeItem) {
        activeItem.classList.add('side-menu--active');
      }
    });
  </script>

  <!-- BEGIN: Factory Details Modal -->
  <div data-tw-backdrop='' aria-hidden='true' tabindex='-1' id='factory-details-modal'
    class='modal group bg-black/60 transition-all duration-300 w-screen h-screen fixed left-0 top-0 invisible opacity-0 z-[9999] flex items-center justify-center' style="display: none;">
    <div class='modal-content bg-white relative flex flex-col rounded-xl shadow-2xl max-w-6xl w-full max-h-[95vh] overflow-hidden border border-gray-100 transform scale-95 transition-all duration-300 ease-out mx-4'>
      
        <!-- Modal Header -->
        <div class='flex items-center justify-between p-6 bg-gradient-to-r from-theme-1 to-theme-2 text-white'>
          <div class='flex items-center space-x-3'>
            <div class='w-10 h-10 bg-white/20 rounded-lg flex items-center justify-center'>
              <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm2 6a2 2 0 100-4 2 2 0 000 4zm8-2a2 2 0 11-4 0 2 2 0 014 0z" clip-rule="evenodd" />
              </svg>
            </div>
            <div>
              <h3 class='text-2xl font-bold' id='modal-factory-name'>Лойиҳа тафсилотлари</h3>
              <p class='text-white/80 text-sm' id='modal-subtitle'>Инвестиция лойиҳаси ҳақида</p>
            </div>
          </div>
          <button type="button" onclick="closeFactoryModal()"
            class='text-white/70 hover:text-white hover:bg-white/10 transition-colors p-2 rounded-lg'>
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>        <!-- Modal Content -->
        <div class='flex-1 overflow-y-auto p-6 bg-gray-50'>
          <div class='grid grid-cols-1 xl:grid-cols-3 gap-6'>
            
            <!-- Left Column - Images and Basic Info -->
            <div class='xl:col-span-1 space-y-4'>
              <!-- Images Card -->
              <div class='bg-white rounded-xl p-4 shadow-sm border border-gray-100'>
                <h4 class='text-lg font-semibold text-gray-800 mb-4 flex items-center'>
                  <svg class="w-5 h-5 mr-2 text-theme-1" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd" />
                  </svg>
                  Лойиҳа расмлари
                </h4>
                <div id='factory-images' class='flex space-x-3 overflow-x-auto pb-2' style='scrollbar-width: thin; scrollbar-color: #cbd5e0 #f7fafc;'>
                  <!-- Images will be loaded here -->
                </div>
              </div>

              <!-- Basic Info Card -->
              <div class='bg-white rounded-xl p-5 shadow-sm border border-gray-100'>
                <h4 class='text-lg font-semibold text-gray-800 mb-4 flex items-center'>
                  <svg class="w-5 h-5 mr-2 text-theme-1" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
                  </svg>
                  Асосий маълумотлар
                </h4>
                <div class='space-y-3'>
                  <div class='flex items-center justify-between py-2 border-b border-gray-100'>
                    <span class='text-gray-600 font-medium'>Лойиҳа номи:</span>
                    <span class='font-semibold text-gray-900' id='modal-name'>-</span>
                  </div>
                  <div class='flex items-center justify-between py-2 border-b border-gray-100'>
                    <span class='text-gray-600 font-medium'>Корхона номи:</span>
                    <span class='font-semibold text-gray-900' id='modal-enterprise-name'>-</span>
                  </div>
                  <div class='flex items-center justify-between py-2 border-b border-gray-100'>
                    <span class='text-gray-600 font-medium'>Лойиҳа мақсади:</span>
                    <span class='font-medium text-gray-900' id='modal-project-goal'>-</span>
                  </div>
                  <div class='flex items-center justify-between py-2 border-b border-gray-100'>
                    <span class='text-gray-600 font-medium'>Регион:</span>
                    <span class='font-medium text-gray-900' id='modal-region'>-</span>
                  </div>
                  <div class='flex items-center justify-between py-2 border-b border-gray-100'>
                    <span class='text-gray-600 font-medium'>Лойиҳа жараёни:</span>
                    <span class='font-medium text-gray-900' id='modal-work-percent'>- %</span>
                  </div>
                  <div class='flex items-center justify-between py-2 border-b border-gray-100'>
                    <span class='text-gray-600 font-medium'>Статус:</span>
                    <span class='px-3 py-1 rounded-full text-sm font-medium' id='modal-status-badge'>
                      <span id='modal-status'>-</span>
                    </span>
                  </div>
                  <div class='flex items-center justify-between py-2 border-b border-gray-100'>
                    <span class='text-gray-600 font-medium'>Ахамияти:</span>
                    <span class='px-3 py-1 rounded-full text-sm font-medium' id='modal-importance-badge'>
                      <span id='modal-importance'>-</span>
                    </span>
                  </div>
                  <div class='flex items-center justify-between py-2'>
                    <span class='text-gray-600 font-medium'>Координаталари:</span>
                    <span class='font-mono text-sm bg-gray-100 px-2 py-1 rounded' id='modal-location'>-</span>
                  </div>
                </div>
              </div>
            </div>

            <!-- Middle Column - Custom Fields, Project Values and Description -->
            <div class='xl:col-span-1 space-y-4'>
              
              <!-- Custom Fields Card -->
              <div class='bg-white rounded-xl p-5 shadow-sm border border-gray-100' id='custom-fields-card' style='display: none;'>
                <h4 class='text-lg font-semibold text-gray-800 mb-4 flex items-center'>
                  <svg class="w-5 h-5 mr-2 text-theme-1" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11 4a1 1 0 10-2 0v4a1 1 0 102 0V7zm-3 1a1 1 0 10-2 0v3a1 1 0 102 0V8zM8 9a1 1 0 00-2 0v2a1 1 0 102 0V9z" clip-rule="evenodd" />
                  </svg>
                  Қўшимча майдонлар
                </h4>
                <div id='modal-custom-fields' class='space-y-2'>
                  <!-- Custom fields will be loaded here -->
                </div>
              </div>

              <!-- Project Values Card -->
              <div class='bg-white rounded-xl p-5 shadow-sm border border-gray-100' id='project-values-card' style='display: none;'>
                <h4 class='text-lg font-semibold text-gray-800 mb-4 flex items-center'>
                  <svg class="w-5 h-5 mr-2 text-theme-1" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" />
                  </svg>
                  Лойиҳа қийматлари
                </h4>
                <div id='modal-project-values' class='space-y-2'>
                  <!-- Project values will be loaded here -->
                </div>
              </div>

              {{!-- <!-- Description Card -->
              <div class='bg-white rounded-xl p-5 shadow-sm border border-gray-100'>
                <h4 class='text-lg font-semibold text-gray-800 mb-3 flex items-center'>
                  <svg class="w-5 h-5 mr-2 text-theme-1" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h8a2 2 0 012 2v12a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 0v12h8V4H6z" clip-rule="evenodd" />
                  </svg>
                  Тавсиф
                </h4>
                <p class='text-gray-700 leading-relaxed' id='modal-description'>Тавсиф мавжуд эмас</p>
              </div> --}}
              
            </div>

            <!-- Right Column - Parameters and Actions -->
            <div class='xl:col-span-1 space-y-4'>
              
              <!-- Parameters Card -->
              <div class='bg-white rounded-xl p-5 shadow-sm border border-gray-100'>
                <h4 class='text-lg font-semibold text-gray-800 mb-4 flex items-center'>
                  <svg class="w-5 h-5 mr-2 text-theme-1" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z" clip-rule="evenodd" />
                  </svg>
                  Параметрлар
                </h4>
                <div id='modal-parameters' class='space-y-2'>
                  <!-- Parameters will be loaded here -->
                </div>
              </div>

              <!-- Video Surveillance Card -->
              <div class='bg-white rounded-xl p-5 shadow-sm border border-gray-100'>
                <h4 class='text-lg font-semibold text-gray-800 mb-4 flex items-center'>
                  <svg class="w-5 h-5 mr-2 text-theme-1" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M2 6a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6zM14.553 7.106A1 1 0 0014 8v4a1 1 0 00.553.894l2 1A1 1 0 0018 13V7a1 1 0 00-1.447-.894l-2 1z" />
                  </svg>
                  Видео кузатув
                </h4>
                <div id='modal-cameras' class='space-y-3'>
                  <!-- Cameras will be loaded here -->
                </div>
              </div>
              
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- END: Factory Details Modal -->

  <!-- BEGIN: Image Modal -->
  <div id='image-modal' class='fixed inset-0 bg-black bg-opacity-75 z-[10000] hidden items-center justify-center p-4'>
    <div class='relative max-w-6xl max-h-full'>
      <!-- Close Button -->
      <button onclick="closeImageModal()" class='absolute top-4 right-4 z-10 bg-black bg-opacity-50 hover:bg-opacity-75 text-white rounded-full p-2 transition-all duration-200'>
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
        </svg>
      </button>
      
      <!-- Navigation Buttons -->
      <button id='prev-image' onclick="navigateImage(-1)" class='absolute left-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 hover:bg-opacity-75 text-white rounded-full p-3 transition-all duration-200'>
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
        </svg>
      </button>
      
      <button id='next-image' onclick="navigateImage(1)" class='absolute right-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 hover:bg-opacity-75 text-white rounded-full p-3 transition-all duration-200'>
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
        </svg>
      </button>
      
      <!-- Image Container -->
      <div class='bg-white rounded-lg overflow-hidden shadow-2xl max-w-4xl mx-auto'>
        <img id='modal-image' src='' alt='' class='w-full h-[70vh] mx-auto block'>
        <div class='p-4 bg-gray-50'>
          <p id='image-counter' class='text-center text-gray-600 font-medium'></p>
          <p id='image-title' class='text-center text-gray-800 mt-1'></p>
        </div>
      </div>
    </div>
  </div>
  <!-- END: Image Modal -->

  <!-- BEGIN: Video Modal -->
  <div id="factoryVideoModal" class="fixed inset-0 bg-black bg-opacity-75 z-[10000] hidden items-center justify-center p-4" onclick="closeFactoryVideoModal()">
    <div class="relative max-w-full max-h-full w-full" onclick="event.stopPropagation()">
      <div class="bg-white rounded-lg overflow-hidden shadow-2xl flex flex-col" style="height: 95vh; max-width: 98vw;">
        <!-- Modal Header -->
        <div class="flex items-center justify-between p-4 bg-gradient-to-r from-theme-1 to-theme-2 text-white flex-shrink-0">
          <h3 id="videoModalTitle" class="text-lg font-medium">Камера кўриниши</h3>
          <button type="button" onclick="closeFactoryVideoModal()" class="text-white hover:text-gray-200 transition-colors">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        
        <!-- Modal Body -->
        <div class="flex flex-col lg:flex-row flex-1 min-h-0 overflow-hidden">
          <!-- Video Area -->
          <div class="flex-1 bg-black flex items-center justify-center min-h-[300px] lg:min-h-[400px]">
            <iframe id="factoryVideoFrame" src="" width="100%" height="100%" frameborder="0" allowfullscreen class="w-full h-full"></iframe>
          </div>
          
          <!-- PTZ Control Panel (only shown if camera has PTZ) -->
          <div id="factoryPtzPanel" class="w-full lg:w-80 bg-gray-100 hidden border-t lg:border-t-0 lg:border-l flex-shrink-0 overflow-y-auto max-h-[40vh] lg:max-h-none">
            <div class="p-2 md:p-4">
              <div class="flex flex-col gap-2 md:gap-4">
                <!-- PTZ Controls -->
                <div class="flex justify-center items-center">
                  <div class="bg-white p-2 md:p-4 rounded-lg shadow-lg w-full max-w-sm md:max-w-none">
                    <h4 class="text-sm md:text-lg font-semibold md:mb-4 text-gray-800 text-center">Камера бошқариш</h4>
                    <div class="flex flex-col items-center">
                      <div data-v-29fcc1ea="" class="ptz-root theme-white mx-auto transform scale-90 md:scale-100">
                        <div data-v-29fcc1ea="" class="ptz-content position-relative">
                          <div data-v-29fcc1ea="" class="ptz-panel mx-auto">
                            <div data-v-29fcc1ea="" class="ptz-panel-content position-relative mx-auto">
                              <div data-v-29fcc1ea="" id="factoryUpLeft" class="cursor-pointer touch-manipulation">
                                <i data-v-29fcc1ea="" title="Chapga yuqoriga" class="ptz-icon-ptz-left-up position-absolute"></i>
                              </div>
                              <div data-v-29fcc1ea="" id="factoryUp" class="cursor-pointer touch-manipulation">
                                <i data-v-29fcc1ea="" title="Yuqoriga" class="ptz-icon-ptz-up position-absolute"></i>
                              </div>
                              <div data-v-29fcc1ea="" id="factoryUpRight" class="cursor-pointer touch-manipulation">
                                <i data-v-29fcc1ea="" title="O'ngga yuqoriga" class="ptz-icon-ptz-right-up position-absolute"></i>
                              </div>
                              <div data-v-29fcc1ea="" id="factoryLeft" class="cursor-pointer touch-manipulation">
                                <i data-v-29fcc1ea="" title="Chapga" class="ptz-icon-ptz-left position-absolute"></i>
                              </div>
                              <div data-v-29fcc1ea="" id="factoryRight" class="cursor-pointer touch-manipulation">
                                <i data-v-29fcc1ea="" title="O'ngga" class="ptz-icon-ptz-right position-absolute"></i>
                              </div>
                              <div data-v-29fcc1ea="" id="factoryDownLeft" class="cursor-pointer touch-manipulation">
                                <i data-v-29fcc1ea="" title="Chapga pastga" class="ptz-icon-ptz-left-down position-absolute"></i>
                              </div>
                              <div data-v-29fcc1ea="" id="factoryDown" class="cursor-pointer touch-manipulation">
                                <i data-v-29fcc1ea="" title="Pastga" class="ptz-icon-ptz-down position-absolute"></i>
                              </div>
                              <div data-v-29fcc1ea="" id="factoryDownRight" class="cursor-pointer touch-manipulation">
                                <i data-v-29fcc1ea="" title="O'ngga pastga" class="ptz-icon-ptz-right-down position-absolute"></i>
                              </div>
                            </div>
                          </div>
                          <div data-v-29fcc1ea="" class="ptz-other mx-auto">
                            <div data-v-29fcc1ea="" class="ptz-wrap mx-auto">
                              <i id="factoryZoomOut" data-v-29fcc1ea="" title="Kichraytirish -" class="ptz-wrap-left ic-ptz_focal_length_shrink position-relative cursor-pointer touch-manipulation"></i>
                              <div data-v-29fcc1ea="" class="ptz-line"></div>
                              <i id="factoryZoomIn" data-v-29fcc1ea="" title="Kattalashtirish +" class="ptz-wrap-right ic-ptz_focal_length_amplify position-relative cursor-pointer touch-manipulation"></i>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                
                <!-- Camera Info -->
                <div class="w-full">
                  <div class="bg-white rounded-lg p-2 md:p-4 h-full">
                    <h5 class="font-semibold mb-2 md:mb-3 text-gray-800 text-sm md:text-base">Камера маълумотлари</h5>
                    <div class="text-xs md:text-sm space-y-1 md:space-y-2">
                      <div class="flex justify-between">
                        <span class="text-gray-600">IP:</span> 
                        <span id="factoryCameraIP" class="font-mono text-gray-900"></span>
                      </div>
                      <div class="flex justify-between">
                        <span class="text-gray-600">Модел:</span> 
                        <span id="factoryCameraModel" class="text-gray-900"></span>
                      </div>
                      <div class="flex justify-between">
                        <span class="text-gray-600">Статус:</span> 
                        <span id="factoryCameraStatus" class="inline-flex items-center px-2 py-1 rounded-full text-xs bg-green-100 text-green-800">
                          Фаол
                        </span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- END: Video Modal -->

  <script>
    // Global factory modal functions
    window.showFactoryDetails = function(factory) {
      
      const modal = document.getElementById('factory-details-modal');
      
      if (!modal) {
        console.error("Modal element not found!");
        alert("Modal topilmadi!");
        return;
      }
      
      // Set factory name and subtitle
      const modalFactoryName = document.getElementById('modal-factory-name');
      const modalSubtitle = document.getElementById('modal-subtitle');
      const modalName = document.getElementById('modal-name');
      const modalEnterpriseName = document.getElementById('modal-enterprise-name');
      const modalProjectGoal = document.getElementById('modal-project-goal');
      const modalRegion = document.getElementById('modal-region');
      const modalWorkPercent = document.getElementById('modal-work-percent');
      const modalStatus = document.getElementById('modal-status');
      const modalStatusBadge = document.getElementById('modal-status-badge');
      const modalImportance = document.getElementById('modal-importance');
      const modalImportanceBadge = document.getElementById('modal-importance-badge');
      const modalCategory = document.getElementById('modal-category');
      const modalDescription = document.getElementById('modal-description');
      const modalLocation = document.getElementById('modal-location');
      
      // Fill basic data
      if (modalFactoryName) modalFactoryName.textContent = factory.name || 'Лойиҳа тафсилотлари';
      if (modalSubtitle) modalSubtitle.textContent = `ID: ${factory.id || '-'} | Сорт: ${factory.sort_num || '-'}`;
      if (modalName) modalName.textContent = factory.name || '-';
      if (modalEnterpriseName) modalEnterpriseName.textContent = factory.enterprise_name || '-';
      if (modalProjectGoal) modalProjectGoal.textContent = factory.project_goal || '-';
      if (modalRegion) modalRegion.textContent = factory.region || '-';
      if (modalWorkPercent) modalWorkPercent.textContent = `${factory.work_persent || 0}%`;
      if (modalCategory) modalCategory.textContent = factory.category || '-';
      if (modalDescription) modalDescription.textContent = factory.project_goal || 'Бу лойиҳа учун батафсил тавсиф мавжуд эмас.';
            
      // Set status with colored badge
      if (modalStatus && modalStatusBadge) {
        const statusText = getStatusText(factory.status);
        modalStatus.textContent = statusText;
        
        // Status badge colors
        modalStatusBadge.className = 'px-3 py-1 rounded-full text-sm font-medium ';
        switch(factory.status) {
          case 'REGISTRATION':
            modalStatusBadge.className += 'bg-yellow-100 text-yellow-800';
            break;
          case 'CONSTRUCTION':
            modalStatusBadge.className += 'bg-blue-100 text-blue-800';
            break;
          case 'STARTED':
            modalStatusBadge.className += 'bg-green-100 text-green-800';
            break;
          default:
            modalStatusBadge.className += 'bg-gray-100 text-gray-800';
        }
      }
      
      // Set importance with colored badge
      if (modalImportance && modalImportanceBadge) {
        const importanceText = getImportanceText(factory.importance);
        modalImportance.textContent = importanceText;
        
        // Importance badge colors
        modalImportanceBadge.className = 'px-3 py-1 rounded-full text-sm font-medium ';
        switch(factory.importance) {
          case 'HIGH':
            modalImportanceBadge.className += 'bg-red-100 text-red-800';
            break;
          case 'AVERAGE':
            modalImportanceBadge.className += 'bg-yellow-100 text-yellow-800';
            break;
          case 'LOW':
            modalImportanceBadge.className += 'bg-green-100 text-green-800';
            break;
          default:
            modalImportanceBadge.className += 'bg-gray-100 text-gray-800';
        }
      }
      
      // Set coordinates
      if (factory.coords && modalLocation) {
        try {
          let coords;
          if (typeof factory.coords === 'string') {
            coords = JSON.parse(factory.coords);
          } else if (Array.isArray(factory.coords)) {
            coords = factory.coords;
          } else {
            coords = [0, 0]; // default values
          }
          modalLocation.textContent = `${coords[1] || '0.000000'}, ${coords[0] || '0.000000'}`;
        } catch (e) {
          console.error('Error parsing coordinates:', e);
          modalLocation.textContent = 'Координаталар топилмади';
        }
      }
            
      // Load images with improved design
      const imagesContainer = document.getElementById('factory-images');
      if (imagesContainer) {
        if (factory.images && factory.images !== '[]') {
          try {
            const images = typeof factory.images === 'string' ? JSON.parse(factory.images) : factory.images;
            if (images && images.length > 0) {
              imagesContainer.innerHTML = images.map((img, index) => `
                <div class="relative cursor-pointer flex-shrink-0 image-hover-container" onclick="openImageModal('${img}', ${index}, ${JSON.stringify(images).replace(/"/g, '&quot;')})">
                  <img src="/mnt/tmkupload/factory-images/${img}" 
                       alt="Factory image ${index + 1}" 
                       class="w-64 h-48 object-cover rounded-lg shadow-md hover:shadow-lg transition-all duration-300">
                  <div class="absolute inset-0 bg-black bg-opacity-0 transition-all duration-300 rounded-lg flex items-center justify-center image-overlay">
                    <svg class="w-10 h-10 text-white opacity-0 transition-opacity duration-300 eye-icon" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"/>
                      <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"/>
                    </svg>
                  </div>
                  <div class="absolute bottom-2 right-2 bg-black bg-opacity-60 text-white text-xs px-2 py-1 rounded pointer-events-none">
                    ${index + 1}/${images.length}
                  </div>
                </div>
              `).join('');
              
              // Add hover effect manually
              setTimeout(() => {
                const imageContainers = document.querySelectorAll('.image-hover-container');
                imageContainers.forEach(container => {
                  const overlay = container.querySelector('.image-overlay');
                  const eyeIcon = container.querySelector('.eye-icon');
                  
                  container.addEventListener('mouseenter', () => {
                    overlay.style.backgroundColor = 'rgba(0, 0, 0, 0.3)';
                    eyeIcon.style.opacity = '1';
                  });
                  
                  container.addEventListener('mouseleave', () => {
                    overlay.style.backgroundColor = 'rgba(0, 0, 0, 0)';
                    eyeIcon.style.opacity = '0';
                  });
                });
              }, 100);
            } else {
              imagesContainer.innerHTML = getPlaceholderImage();
            }
          } catch (e) {
            imagesContainer.innerHTML = getPlaceholderImage();
          }
        } else {
          imagesContainer.innerHTML = getPlaceholderImage();
        }
      }
      
      
      // Load parameters with improved design
      const parametersContainer = document.getElementById('modal-parameters');
      if (parametersContainer) {
        if (factory.factoryParams && factory.factoryParams.length > 0) {
          parametersContainer.innerHTML = factory.factoryParams.map(param => {
            const latestLog = param.latestLog;
            const status = param.status || 0;
            const statusClass = status === 1 ? 'bg-green-100 text-green-800' : status === 2 ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-800';
            const statusText = status === 1 ? 'Яхши' : status === 2 ? 'Ёмон' : 'Нормал';
            const statusIcon = status === 1 ? '✓' : status === 2 ? '✗' : '○';
            
            return `
              <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors">
                <div class="flex-1">
                  <div class="flex items-center space-x-2">
                    <span class="font-medium text-gray-900">${param.param?.name || 'Номсиз параметр'}</span>
                    <span class="px-2 py-1 rounded-full text-xs font-medium ${statusClass}">
                      ${statusIcon} ${statusText}
                    </span>
                  </div>
                  ${latestLog ? `<div class="text-sm text-gray-500 mt-1">Қиймат: <span class="font-medium">${latestLog.value || '-'}</span></div>` : ''}
                  ${latestLog && latestLog.date_update ? `<div class="text-xs text-gray-400 mt-1">Янгиланган: ${new Date(latestLog.date_update).toLocaleDateString('uz-UZ')}</div>` : ''}
                </div>
              </div>
            `;
          }).join('');
        } else {
          parametersContainer.innerHTML = `
            <div class="text-center py-8">
              <svg class="w-12 h-12 mx-auto text-gray-400 mb-3" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z" clip-rule="evenodd" />
              </svg>
              <p class="text-gray-500">Бу лойиҳа учун параметрлар мавжуд эмас</p>
            </div>
          `;
        }
      }
            
      // Load cameras
      const camerasContainer = document.getElementById('modal-cameras');
      if (camerasContainer) {
        console.log('Factory data:', factory);
        console.log('Cameras data:', factory.cameras);
        if (factory.cameras && factory.cameras.length > 0) {
          camerasContainer.innerHTML = factory.cameras.map(camera => {
            const statusColors = {
              'active': 'bg-green-100 text-green-800',
              'inactive': 'bg-red-100 text-red-800', 
              'maintenance': 'bg-yellow-100 text-yellow-800',
              'broken': 'bg-gray-100 text-gray-800'
            };
            const statusTexts = {
              'active': 'Фаол',
              'inactive': 'Фаол эмас',
              'maintenance': 'Техник хизмат',
              'broken': 'Ишламайди'
            };
            
            return `
              <div class="bg-gray-50 rounded-lg p-3 hover:bg-gray-100 transition-colors cursor-pointer" 
                   onclick="openFactoryVideoModal('${camera.id}', '${camera.brand || ''} ${camera.model}', '${camera.ip_address}', '${camera.stream_link || ''}', ${camera.has_ptz || false})">
                <div class="flex items-center justify-between">
                  <div class="flex-1">
                    <div class="font-medium text-gray-900">${camera.brand || ''} ${camera.model}</div>
                    <div class="text-sm text-gray-600 mt-1">${camera.ip_address}</div>
                  </div>
                  <div class="flex items-center space-x-2">
                    <span class="px-2 py-1 rounded-full text-xs ${statusColors[camera.status] || 'bg-gray-100 text-gray-800'}">
                      ${statusTexts[camera.status] || camera.status}
                    </span>
                    ${camera.has_ptz ? '<span class="px-2 py-1 rounded-full text-xs bg-blue-100 text-blue-800">PTZ</span>' : ''}
                    <svg class="w-5 h-5 text-theme-1" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M2 6a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6zM14.553 7.106A1 1 0 0014 8v4a1 1 0 00.553.894l2 1A1 1 0 0018 13V7a1 1 0 00-1.447-.894l-2 1z" />
                    </svg>
                  </div>
                </div>
              </div>
            `;
          }).join('');
        } else {
          camerasContainer.innerHTML = `
            <div class="text-center py-8">
              <svg class="w-12 h-12 mx-auto text-gray-400 mb-3" fill="currentColor" viewBox="0 0 20 20">
                <path d="M2 6a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6zM14.553 7.106A1 1 0 0014 8v4a1 1 0 00.553.894l2 1A1 1 0 0018 13V7a1 1 0 00-1.447-.894l-2 1z" />
              </svg>
              <p class="text-gray-500">Бу лойиҳа учун камералар мавжуд эмас</p>
            </div>
          `;
        }
      }

      // Load custom fields
      const customFieldsContainer = document.getElementById('modal-custom-fields');
      const customFieldsCard = document.getElementById('custom-fields-card');
      
      if (factory.custom_fields && Object.keys(factory.custom_fields).length > 0) {
        customFieldsCard.style.display = 'block';
        customFieldsContainer.innerHTML = Object.entries(factory.custom_fields).map(([key, value]) => `
          <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors">
            <div class="flex-1">
              <div class="font-medium text-gray-900">${key}</div>
              <div class="text-sm text-gray-600 mt-1">${value}</div>
            </div>
          </div>
        `).join('');
      } else {
        customFieldsCard.style.display = 'none';
      }
      
      // Load project values
      const projectValuesContainer = document.getElementById('modal-project-values');
      const projectValuesCard = document.getElementById('project-values-card');
      
      if (factory.project_values && Object.keys(factory.project_values).length > 0) {
        projectValuesCard.style.display = 'block';
        
        let projectValuesHTML = '';
        
        // Check if hierarchical format with "child" property
        if (factory.project_values.child && typeof factory.project_values.child === 'object') {
          // Display total value first
          if (factory.project_values["Лойиҳанинг қиймати"]) {
            projectValuesHTML += `
              <div class="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-lg p-4 hover:from-green-100 hover:to-emerald-100 transition-all duration-200">
                <div class="text-center">
                  <div class="text-sm font-medium text-gray-700 mb-2">Лойиҳанинг қиймати</div>
                  <div class="text-2xl font-bold text-green-600">${factory.project_values["Лойиҳанинг қиймати"]}</div>
                </div>
              </div>
            `;
          }
          
          // Display child values
          projectValuesHTML += Object.entries(factory.project_values.child).map(([key, value]) => `
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4 hover:from-blue-100 hover:to-indigo-100 transition-all duration-200">
              <div class="text-center">
                <div class="text-sm font-medium text-gray-700 mb-2">${key}</div>
                <div class="text-2xl font-bold text-theme-1">${value}</div>
              </div>
            </div>
          `).join('');
        } else {
          // Flat format (old format support)
          projectValuesHTML = Object.entries(factory.project_values).map(([key, value]) => {
            // Skip child objects in flat display
            if (typeof value === 'object') {
              return '';
            }
            return `
              <div class="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4 hover:from-blue-100 hover:to-indigo-100 transition-all duration-200">
                <div class="text-center">
                  <div class="text-sm font-medium text-gray-700 mb-2">${key}</div>
                  <div class="text-2xl font-bold text-theme-1">${value}</div>
                </div>
              </div>
            `;
          }).join('');
        }
        
        projectValuesContainer.innerHTML = projectValuesHTML;
      } else {
        projectValuesCard.style.display = 'none';
      }
      
      // First show the modal
      modal.style.display = 'flex';
      modal.classList.remove('invisible');
      modal.setAttribute('aria-hidden', 'false');
      
      // Trigger animation with slight delay for smoother effect
      setTimeout(() => {
        modal.classList.remove('opacity-0');
        modal.classList.add('visible', 'opacity-100', 'show');
        
        // Scale animation for modal content
        const modalContent = modal.querySelector('.modal-content');
        if (modalContent) {
          modalContent.classList.remove('scale-95');
          modalContent.classList.add('scale-100');
        }
      }, 10);
      
      // Sahifa scroll ni to'xtatish
      document.body.style.overflow = 'hidden';
            
      // Focus on close button
      setTimeout(() => {
        const closeBtn = modal.querySelector('button[onclick="closeFactoryModal()"]');
        if (closeBtn) closeBtn.focus();
      }, 100);
    };

    function getPlaceholderImage() {
      return `
        <div class="relative">
          <div class="w-full h-48 bg-gradient-to-br from-gray-100 to-gray-200 rounded-lg flex items-center justify-center">
            <div class="text-center">
              <svg class="w-16 h-16 mx-auto text-gray-400 mb-3" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd" />
              </svg>
              <p class="text-gray-500 text-sm">Расм мавжуд эмас</p>
            </div>
          </div>
        </div>
      `;
    }

    window.closeFactoryModal = function() {
      const modal = document.getElementById('factory-details-modal');
      if (modal) {
        // Start closing animation
        modal.classList.remove('opacity-100', 'show');
        modal.classList.add('opacity-0');
        
        // Scale down animation for modal content
        const modalContent = modal.querySelector('.modal-content');
        if (modalContent) {
          modalContent.classList.remove('scale-100');
          modalContent.classList.add('scale-95');
        }
        
        // Hide modal after animation completes
        setTimeout(() => {
          modal.style.display = 'none';
          modal.classList.add('invisible');
          modal.classList.remove('visible');
          modal.setAttribute('aria-hidden', 'true');
          
          // Sahifa scroll ni qayta tiklash
          document.body.style.overflow = 'auto';
        }, 300); // 300ms matches the CSS transition duration
      }
    };

    function getStatusText(status) {
      switch(status) {
        case 'REGISTRATION': return 'Расмийлаштириш жараёнида';
        case 'CONSTRUCTION': return 'Қурилиш';
        case 'STARTED': return 'Ишлаб турибди';
        default: return status;
      }
    }

    function getImportanceText(importance) {
      switch(importance) {
        case 'HIGH': return 'Юқори';
        case 'AVERAGE': return 'Ўрта';
        case 'LOW': return 'Паст';
        default: return importance;
      }
    }

    // Image modal functions
    let currentImageIndex = 0;
    let currentImages = [];
    
    window.openImageModal = function(imageName, index, images) {
      currentImageIndex = index;
      currentImages = typeof images === 'string' ? JSON.parse(images) : images;
      
      const modal = document.getElementById('image-modal');
      const modalImage = document.getElementById('modal-image');
      const imageCounter = document.getElementById('image-counter');
      const imageTitle = document.getElementById('image-title');
      const prevBtn = document.getElementById('prev-image');
      const nextBtn = document.getElementById('next-image');
      
      if (modal && modalImage) {
        modalImage.src = `/mnt/tmkupload/factory-images/${imageName}`;
        
        if (imageCounter) {
          imageCounter.textContent = `${index + 1} / ${currentImages.length}`;
        }
        
        if (imageTitle) {
          imageTitle.textContent = `Лойиҳа расми ${index + 1}`;
        }
        
        // Show/hide navigation buttons
        if (prevBtn) prevBtn.style.display = currentImages.length > 1 ? 'block' : 'none';
        if (nextBtn) nextBtn.style.display = currentImages.length > 1 ? 'block' : 'none';
        
        modal.style.display = 'flex';
        document.body.style.overflow = 'hidden';
      }
    };
    
    window.closeImageModal = function() {
      const modal = document.getElementById('image-modal');
      if (modal) {
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
      }
    };
    
    window.navigateImage = function(direction) {
      currentImageIndex += direction;
      
      // Wrap around
      if (currentImageIndex < 0) {
        currentImageIndex = currentImages.length - 1;
      } else if (currentImageIndex >= currentImages.length) {
        currentImageIndex = 0;
      }
      
      const modalImage = document.getElementById('modal-image');
      const imageCounter = document.getElementById('image-counter');
      const imageTitle = document.getElementById('image-title');
      
      if (modalImage && currentImages[currentImageIndex]) {
        modalImage.src = `/mnt/tmkupload/factory-images/${currentImages[currentImageIndex]}`;
        
        if (imageCounter) {
          imageCounter.textContent = `${currentImageIndex + 1} / ${currentImages.length}`;
        }
        
        if (imageTitle) {
          imageTitle.textContent = `Лойиҳа расми ${currentImageIndex + 1}`;
        }
      }
    };

    // Video modal functions
    let factoryCurrentCameraId = null;
    let factoryCurrentCameraIP = null;
    
    window.openFactoryVideoModal = function(cameraId, model, ipAddress, streamLink, hasPtz) {
      console.log('Opening factory video modal with:', { cameraId, model, ipAddress, streamLink, hasPtz });
      
      factoryCurrentCameraId = cameraId;
      factoryCurrentCameraIP = ipAddress;
      
      const modal = document.getElementById('factoryVideoModal');
      const modalTitle = document.getElementById('videoModalTitle');
      const videoFrame = document.getElementById('factoryVideoFrame');
      const ptzPanel = document.getElementById('factoryPtzPanel');
      
      console.log('Modal elements:', { modal, modalTitle, videoFrame, ptzPanel });
      
      if (modal && modalTitle && videoFrame) {
        modalTitle.textContent = `${model} - Video кўриниши`;
        
        // Set camera info
        const cameraIP = document.getElementById('factoryCameraIP');
        const cameraModel = document.getElementById('factoryCameraModel');
        const cameraStatus = document.getElementById('factoryCameraStatus');
        
        if (cameraIP) cameraIP.textContent = ipAddress;
        if (cameraModel) cameraModel.textContent = model;
        if (cameraStatus) cameraStatus.textContent = 'Онлайн';
        
        // Set video source
        if (streamLink && streamLink !== 'null' && streamLink !== '') {
          videoFrame.src = streamLink;
          console.log('Using stream link:', streamLink);
        } else {
          // Fallback - default stream
          videoFrame.src = `https://tmk.bgs.uz/camera/cameratmk2.php`;
          console.log('Using fallback stream');
        }
        
        // Show/hide PTZ controls based on camera capability
        if (ptzPanel) {
          if (hasPtz) {
            ptzPanel.classList.remove('hidden');
            initializeFactoryPTZControls();
            console.log('PTZ controls enabled');
          } else {
            ptzPanel.classList.add('hidden');
            console.log('PTZ controls disabled');
          }
        }
        
        // Show modal
        modal.style.display = 'flex';
        modal.classList.remove('hidden');
        
        console.log('Modal should be visible now');
        
        // Prevent body scroll
        document.body.style.overflow = 'hidden';
      } else {
        console.error('Modal elements not found!');
      }
    };

    window.closeFactoryVideoModal = function() {
      const modal = document.getElementById('factoryVideoModal');
      const videoFrame = document.getElementById('factoryVideoFrame');
      
      if (modal && videoFrame) {
        modal.style.display = 'none';
        modal.classList.add('hidden');
        
        // Stop video
        videoFrame.src = '';
        
        // Reset camera variables
        factoryCurrentCameraId = null;
        factoryCurrentCameraIP = null;
        
        // Restore body scroll
        document.body.style.overflow = 'auto';
      }
    };

    function initializeFactoryPTZControls() {
      if (!factoryCurrentCameraId || !factoryCurrentCameraIP) return;
      
      console.log('Initializing PTZ controls for camera:', factoryCurrentCameraId);
      
      // PTZ control functions
      function sendFactoryPTZCommand(command, pan, tilt) {
        let xmlData;
        if(command === "control") {
          xmlData = `<?xml version="1.0" encoding="UTF-8"?><PTZData><pan>${pan}</pan><tilt>${tilt}</tilt></PTZData>`;
        } else {
          xmlData = `<?xml version="1.0" encoding="UTF-8"?><PTZData><zoom>${pan}</zoom></PTZData>`;
        }

        const data = {
          cameraId: factoryCurrentCameraId,
          zoom: command,
          xml: xmlData,
          ip: factoryCurrentCameraIP,
        };

        fetch('/cameras/ptz-control', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => {
          console.log('PTZ command success:', data);
        })
        .catch(error => {
          console.error('PTZ command error:', error);
        });
      }

      // Direction controls with factory prefix
      const directions = {
        'factoryUp': [0, 60],
        'factoryDown': [0, -60],
        'factoryLeft': [-60, 0],
        'factoryRight': [60, 0],
        'factoryUpLeft': [-60, 60],
        'factoryUpRight': [60, 60],
        'factoryDownLeft': [-60, -60],
        'factoryDownRight': [60, -60]
      };

      Object.keys(directions).forEach(direction => {
        const element = document.getElementById(direction);
        if (element) {
          const icon = element.querySelector('i');
          
          // Remove existing event listeners
          element.removeEventListener('mousedown', element._factoryMouseDown);
          element.removeEventListener('mouseup', element._factoryMouseUp);
          element.removeEventListener('mouseleave', element._factoryMouseLeave);
          element.removeEventListener('touchstart', element._factoryTouchStart);
          element.removeEventListener('touchend', element._factoryTouchEnd);
          element.removeEventListener('touchcancel', element._factoryTouchCancel);
          
          // Mouse events
          element._factoryMouseDown = () => {
            if (icon) icon.classList.add('active');
            sendFactoryPTZCommand('control', directions[direction][0], directions[direction][1]);
          };
          element._factoryMouseUp = () => {
            if (icon) icon.classList.remove('active');
            sendFactoryPTZCommand('control', 0, 0);
          };
          element._factoryMouseLeave = () => {
            if (icon) icon.classList.remove('active');
            sendFactoryPTZCommand('control', 0, 0);
          };
          
          element.addEventListener('mousedown', element._factoryMouseDown);
          element.addEventListener('mouseup', element._factoryMouseUp);
          element.addEventListener('mouseleave', element._factoryMouseLeave);
          
          // Touch events for mobile
          element._factoryTouchStart = (e) => {
            e.preventDefault();
            if (icon) icon.classList.add('active');
            sendFactoryPTZCommand('control', directions[direction][0], directions[direction][1]);
          };
          element._factoryTouchEnd = (e) => {
            e.preventDefault();
            if (icon) icon.classList.remove('active');
            sendFactoryPTZCommand('control', 0, 0);
          };
          element._factoryTouchCancel = (e) => {
            e.preventDefault();
            if (icon) icon.classList.remove('active');
            sendFactoryPTZCommand('control', 0, 0);
          };
          
          element.addEventListener('touchstart', element._factoryTouchStart);
          element.addEventListener('touchend', element._factoryTouchEnd);
          element.addEventListener('touchcancel', element._factoryTouchCancel);
        }
      });

      // Zoom controls
      const zoomIn = document.getElementById('factoryZoomIn');
      const zoomOut = document.getElementById('factoryZoomOut');
      
      if (zoomIn) {
        // Remove existing event listeners
        zoomIn.removeEventListener('mousedown', zoomIn._factoryMouseDown);
        zoomIn.removeEventListener('mouseup', zoomIn._factoryMouseUp);
        zoomIn.removeEventListener('mouseleave', zoomIn._factoryMouseLeave);
        zoomIn.removeEventListener('touchstart', zoomIn._factoryTouchStart);
        zoomIn.removeEventListener('touchend', zoomIn._factoryTouchEnd);
        zoomIn.removeEventListener('touchcancel', zoomIn._factoryTouchCancel);
        
        // Mouse events
        zoomIn._factoryMouseDown = () => {
          zoomIn.classList.add('active');
          sendFactoryPTZCommand('zoom', 60, 0);
        };
        zoomIn._factoryMouseUp = () => {
          zoomIn.classList.remove('active');
          sendFactoryPTZCommand('zoom', 0, 0);
        };
        zoomIn._factoryMouseLeave = () => {
          zoomIn.classList.remove('active');
          sendFactoryPTZCommand('zoom', 0, 0);
        };
        
        zoomIn.addEventListener('mousedown', zoomIn._factoryMouseDown);
        zoomIn.addEventListener('mouseup', zoomIn._factoryMouseUp);
        zoomIn.addEventListener('mouseleave', zoomIn._factoryMouseLeave);
        
        // Touch events
        zoomIn._factoryTouchStart = (e) => {
          e.preventDefault();
          zoomIn.classList.add('active');
          sendFactoryPTZCommand('zoom', 60, 0);
        };
        zoomIn._factoryTouchEnd = (e) => {
          e.preventDefault();
          zoomIn.classList.remove('active');
          sendFactoryPTZCommand('zoom', 0, 0);
        };
        zoomIn._factoryTouchCancel = (e) => {
          e.preventDefault();
          zoomIn.classList.remove('active');
          sendFactoryPTZCommand('zoom', 0, 0);
        };
        
        zoomIn.addEventListener('touchstart', zoomIn._factoryTouchStart);
        zoomIn.addEventListener('touchend', zoomIn._factoryTouchEnd);
        zoomIn.addEventListener('touchcancel', zoomIn._factoryTouchCancel);
      }
      
      if (zoomOut) {
        // Remove existing event listeners
        zoomOut.removeEventListener('mousedown', zoomOut._factoryMouseDown);
        zoomOut.removeEventListener('mouseup', zoomOut._factoryMouseUp);
        zoomOut.removeEventListener('mouseleave', zoomOut._factoryMouseLeave);
        zoomOut.removeEventListener('touchstart', zoomOut._factoryTouchStart);
        zoomOut.removeEventListener('touchend', zoomOut._factoryTouchEnd);
        zoomOut.removeEventListener('touchcancel', zoomOut._factoryTouchCancel);
        
        // Mouse events
        zoomOut._factoryMouseDown = () => {
          zoomOut.classList.add('active');
          sendFactoryPTZCommand('zoom', -60, 0);
        };
        zoomOut._factoryMouseUp = () => {
          zoomOut.classList.remove('active');
          sendFactoryPTZCommand('zoom', 0, 0);
        };
        zoomOut._factoryMouseLeave = () => {
          zoomOut.classList.remove('active');
          sendFactoryPTZCommand('zoom', 0, 0);
        };
        
        zoomOut.addEventListener('mousedown', zoomOut._factoryMouseDown);
        zoomOut.addEventListener('mouseup', zoomOut._factoryMouseUp);
        zoomOut.addEventListener('mouseleave', zoomOut._factoryMouseLeave);
        
        // Touch events
        zoomOut._factoryTouchStart = (e) => {
          e.preventDefault();
          zoomOut.classList.add('active');
          sendFactoryPTZCommand('zoom', -60, 0);
        };
        zoomOut._factoryTouchEnd = (e) => {
          e.preventDefault();
          zoomOut.classList.remove('active');
          sendFactoryPTZCommand('zoom', 0, 0);
        };
        zoomOut._factoryTouchCancel = (e) => {
          e.preventDefault();
          zoomOut.classList.remove('active');
          sendFactoryPTZCommand('zoom', 0, 0);
        };
        
        zoomOut.addEventListener('touchstart', zoomOut._factoryTouchStart);
        zoomOut.addEventListener('touchend', zoomOut._factoryTouchEnd);
        zoomOut.addEventListener('touchcancel', zoomOut._factoryTouchCancel);
      }
    }

    // Close modal on Escape key
    document.addEventListener('keydown', function(event) {
      if (event.key === 'Escape') {
        const factoryModal = document.getElementById('factory-details-modal');
        const imageModal = document.getElementById('image-modal');
        const videoModal = document.getElementById('factoryVideoModal');
        
        if (videoModal && videoModal.style.display === 'flex') {
          closeFactoryVideoModal();
        } else if (imageModal && imageModal.style.display === 'flex') {
          closeImageModal();
        } else if (factoryModal && !factoryModal.classList.contains('invisible')) {
          closeFactoryModal();
        }
      }
      
      // Image navigation with arrow keys
      if (document.getElementById('image-modal').style.display === 'flex') {
        if (event.key === 'ArrowLeft') {
          navigateImage(-1);
        } else if (event.key === 'ArrowRight') {
          navigateImage(1);
        }
      }
    });

    // Close modal when clicking outside
    document.addEventListener('DOMContentLoaded', function() {
      const factoryModal = document.getElementById('factory-details-modal');
      const imageModal = document.getElementById('image-modal');
      
      if (factoryModal) {
        factoryModal.addEventListener('click', function(event) {
          if (event.target === this) {
            closeFactoryModal();
          }
        });
      }
      
      if (imageModal) {
        imageModal.addEventListener('click', function(event) {
          if (event.target === this) {
            closeImageModal();
          }
        });
      }
            
    });
  </script>
</body>

</html>